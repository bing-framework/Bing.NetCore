# EditorConfig is awesome:http://EditorConfig.org

# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
indent_style = space
# (Please don't specify an indent_size here; that has too many unintended consequences.)

[*.md]
trim_trailing_whitespace = false

[*.csproj]
end_of_line              = crlf

[*.sln]
end_of_line              = crlf

[*.ps1]
indent_size              = 4
end_of_line              = crlf

# Code files
[*.{cs,csx,vb,vbx}]
# 缩进和间距
indent_size = 4
insert_final_newline = true
charset = utf-8-bom

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

[*.{sh}]
end_of_line = lf
indent_size = 2

# C# 命名规则
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions
[*.cs]
## 接口示例：IPascalCase
dotnet_naming_rule.interface_rule.symbols                                 = interface_symbol
dotnet_naming_rule.interface_rule.style                                   = interface_style
dotnet_naming_rule.interface_rule.severity                                = error
dotnet_naming_symbols.interface_symbol.applicable_kinds                   = interface
dotnet_naming_style.interface_style.required_prefix                       = I
dotnet_naming_style.interface_style.capitalization                        = pascal_case

## 类，结构，枚举，委托，方法，属性，事件示例: PascalCase
dotnet_naming_rule.pascal_case_rule.symbols                               = pascal_case_symbol
dotnet_naming_rule.pascal_case_rule.style                                 = pascal_case_style
dotnet_naming_rule.pascal_case_rule.severity                              = error
dotnet_naming_symbols.pascal_case_symbol.applicable_kinds                 = class, struct, enum, delegate, method, property, event
dotnet_naming_style.pascal_case_style.capitalization                      = pascal_case

## 私有字段示例: _camelCase
dotnet_naming_rule.private_field_rule.symbols                             = private_field_symbol
dotnet_naming_rule.private_field_rule.style                               = private_field_style
dotnet_naming_rule.private_field_rule.severity                            = error
dotnet_naming_symbols.private_field_symbol.applicable_kinds               = field
dotnet_naming_symbols.private_field_symbol.applicable_accessibilities     = private
dotnet_naming_style.private_field_style.required_prefix                   = _
dotnet_naming_style.private_field_style.capitalization                    = camel_case

## 非私有字段示例: PascalCase
dotnet_naming_rule.non_private_field_rule.symbols                         = non_private_field_symbol
dotnet_naming_rule.non_private_field_rule.style                           = non_private_field_style
dotnet_naming_rule.non_private_field_rule.severity                        = error
dotnet_naming_symbols.non_private_field_symbol.applicable_kinds           = field
dotnet_naming_symbols.non_private_field_symbol.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_style.non_private_field_style.capitalization                = pascal_case

## 非私有只读字段示例: PascalCase
dotnet_naming_rule.protected_readonly_field_rule.symbols                            = protected_readonly_field_symbol
dotnet_naming_rule.protected_readonly_field_rule.style                              = protected_readonly_field_style
dotnet_naming_rule.protected_readonly_field_rule.severity                           = error
dotnet_naming_symbols.protected_readonly_field_symbol.applicable_kinds              = field, property
dotnet_naming_symbols.protected_readonly_field_symbol.applicable_accessibilities    = public, internal, protected, protected_internal
dotnet_naming_symbols.protected_readonly_field_symbol.required_modifiers            = readonly
dotnet_naming_style.protected_readonly_field_style.capitalization                   = pascal_case

## 参数示例: camelCase
dotnet_naming_rule.parameter_rule.symbols                                 = parameter_symbol
dotnet_naming_rule.parameter_rule.style                                   = parameter_style
dotnet_naming_rule.parameter_rule.severity                                = error
dotnet_naming_symbols.parameter_symbol.applicable_kinds                   = parameter
dotnet_naming_style.parameter_style.capitalization                        = camel_case

## 常量示例: ALL_UPPER
dotnet_naming_rule.const_rule.symbols                                     = const_symbol
dotnet_naming_rule.const_rule.style                                       = const_style
dotnet_naming_rule.const_rule.severity                                    = suggestion
dotnet_naming_symbols.const_symbol.required_modifiers                     = const
dotnet_naming_symbols.const_symbol.applicable_kinds                       = field
dotnet_naming_style.const_style.capitalization                            = all_upper
dotnet_naming_style.const_style.word_separator                            = _

## 异步方法示例: xxxAsync
dotnet_naming_rule.async_method_rule.symbols                              = async_method_symbol
dotnet_naming_rule.async_method_rule.style                                = async_method_style
dotnet_naming_rule.async_method_rule.severity                             = error
dotnet_naming_symbols.async_method_symbol.required_modifiers              = async
dotnet_naming_symbols.async_method_symbol.applicable_kinds                = method
dotnet_naming_style.async_method_style.required_suffix                    = Async

# Dotnet code style settings:
[*.{cs,vb}]
# Sort using and Import directives with System.* appearing first(using排序)
dotnet_sort_system_directives_first = true
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Suggest more modern language features when available
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion

# CSharp code style settings:
[*.cs]
# Indentation preferences(缩进)
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Prefer "var" everywhere
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:none
csharp_style_expression_bodied_indexers = true:none
csharp_style_expression_bodied_accessors = true:none

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Newline settings(换行)
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Spacing(间距)
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_around_binary_operators = before_and_after
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false

# Blocks are allowed
csharp_prefer_braces = true:silent
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true